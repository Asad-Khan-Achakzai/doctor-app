{"version":3,"sources":["webpack:///src/app/patient/patient-signup/patient-signup.page.html","webpack:///src/app/patient/patient-signup/patient-signup-routing.module.ts","webpack:///src/app/patient/patient-signup/patient-signup.module.ts","webpack:///src/app/patient/patient-signup/patient-signup.page.scss","webpack:///src/app/patient/patient-signup/patient-signup.page.ts"],"names":["routes","path","component","PatientSignupPageRoutingModule","imports","forChild","exports","PatientSignupPageModule","declarations","base64toBlob","base64Data","contentType","sliceSize","byteCharacters","window","atob","bytesLength","length","slicesCount","Math","ceil","byteArrays","Array","sliceIndex","begin","end","min","bytes","offset","i","charCodeAt","Uint8Array","Blob","type","PatientSignupPage","patientService","menu","toastController","router","formBuilder","platform","alertController","loading","vissible","verifyLoading","emailVerified","disableEmailColumn","Form","group","username","required","pattern","cnic","maxLength","minLength","email","password","phone","image","imageUrl","code","imageData","imageFile","replace","error","console","log","patchValue","controls","setValue","imageURL","value","userRegister","subscribe","data","create","message","duration","toast","present","navigateByUrl","header","buttons","alert","sendMail","selector","template"],"mappings":"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","file":"patient-patient-signup-patient-signup-module-es5.js","sourcesContent":["export default \"\\n<ion-content>\\n  <ion-header>\\n    <ion-toolbar >\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button  (click)=\\\"back()\\\" defaultHref=\\\"/home\\\"></ion-back-button>\\n      </ion-buttons>\\n      <div class =\\\"title\\\">\\n        <ion-title>Registration</ion-title>\\n      </div>\\n    </ion-toolbar>\\n  </ion-header>\\n  <div class = \\\"mainDiv\\\" >\\n    <ion-grid>\\n      <ion-row>\\n        \\n        <ion-col size-md =\\\"8\\\" offset-md = \\\"2\\\">\\n            <div [formGroup]=\\\"Form\\\">\\n          <ion-card>\\n            <ion-card-header>\\n          \\n              <div class =\\\"title\\\">\\n            <ion-card-title color=\\\"light\\\" size=\\\"large\\\" text-center>Welcome</ion-card-title>\\n          </div>\\n\\n\\n            </ion-card-header>\\n          </ion-card>\\n          <ion-card-content>\\n            <ion-row>\\n                \\n              <ion-col size = \\\"6\\\">\\n            <ion-item>\\n              <ion-label position = \\\"floating\\\" >\\n                User Name\\n              </ion-label>\\n              <ion-input type =\\\"text\\\"  formControlName=\\\"username\\\" >\\n              </ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position = \\\"floating\\\">\\n                Cnic Number\\n              </ion-label>\\n              <ion-input type =\\\"tel\\\"  formControlName=\\\"cnic\\\" appCnicMask \\n              maxlength=\\\"15\\\">\\n              </ion-input>\\n            </ion-item>\\n          </ion-col>\\n          \\n          <ion-col size = \\\"6\\\"  id =\\\"imageCol\\\" >\\n            <app-image-picker (imagePick)=\\\"onImagePicked($event)\\\"></app-image-picker>\\n           </ion-col>  \\n          </ion-row>   \\n          <ion-item>\\n            <ion-label position = \\\"floating\\\">\\n              Phone#\\n            </ion-label>\\n            <ion-input type =\\\"tel\\\"  formControlName=\\\"phone\\\" appPhoneMask\\n            maxlength=\\\"12\\\">\\n            </ion-input>    \\n          </ion-item>\\n          <ion-row>\\n            <ion-col size=\\\"8\\\">\\n            <ion-item *ngIf=\\\"disableEmailColumn\\\"> \\n              <ion-label position = \\\"floating\\\">\\n                Valid Gmail Address\\n              </ion-label>\\n              <ion-input type =\\\"text\\\"  formControlName=\\\"email\\\" id = \\\"emailaddress\\\">\\n              </ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\" >\\n            <ion-button *ngIf=\\\"disableEmailColumn\\\" expand=\\\"full\\\" [disabled]=\\\"!Form.value['email']\\\" (click)=\\\"sendEmail()\\\" >\\n              Send Code &nbsp;<ion-spinner *ngIf=\\\"verifyLoading\\\"></ion-spinner></ion-button>\\n            </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col size=\\\"8\\\">\\n            <ion-item *ngIf=\\\"vissible\\\">\\n              <ion-label position = \\\"floating\\\" >\\n                Enter code\\n              </ion-label>\\n              <ion-input type =\\\"text\\\" formControlName=\\\"code\\\"  >\\n              </ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\" >\\n            <ion-button *ngIf=\\\"vissible\\\" expand=\\\"full\\\" (click)=\\\"verifyCode()\\\" >\\n              Verify</ion-button>\\n            </ion-col>\\n          </ion-row>\\n            <ion-item>\\n                <ion-label position = \\\"floating\\\">\\n                  Password\\n                </ion-label>\\n                <ion-input type =\\\"password\\\" formControlName=\\\"password\\\">\\n                </ion-input>\\n              </ion-item>\\n              \\n              <ion-row justify-content: end>\\n                <ion-col class=\\\"ion-text-center\\\">\\n                  \\n              <ion-button expand=\\\"full\\\" shape=\\\"round\\\" (click) = \\\"signUpButton()\\\" [disabled]=\\\"!Form.valid\\\">\\n                Sign Up &nbsp;<ion-spinner *ngIf=\\\"loading\\\"></ion-spinner>\\n              </ion-button >\\n            </ion-col>\\n          </ion-row>\\n            </ion-card-content>\\n          </div>  \\n          </ion-col>\\n           </ion-row>\\n        </ion-grid>\\n      </div>\\n      \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PatientSignupPage } from './patient-signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PatientSignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PatientSignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PatientSignupPageRoutingModule } from './patient-signup-routing.module';\n\nimport { PatientSignupPage } from './patient-signup.page';\nimport { MasksModule } from 'src/app/shared/masks/masks.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MasksModule,\n    SharedModule,\n    ReactiveFormsModule,\n    PatientSignupPageRoutingModule\n  ],\n  declarations: [PatientSignupPage]\n})\nexport class PatientSignupPageModule {}\n","export default \"ion-content {\\n  --background: linear-gradient(to top, #93F9B9, #1D976C);\\n}\\n\\nion-toolbar {\\n  --background: transparent;\\n}\\n\\nion-card-title {\\n  --background: transparent;\\n}\\n\\nion-card {\\n  --background: linear-gradient(to right, #134E5E 0%, #71B280 51%, #134E5E 100%);\\n}\\n\\nion-item {\\n  --background: transparent;\\n}\\n\\nion-button {\\n  --background: linear-gradient(to right, #134E5E 0%, #71B280 51%, #134E5E 100%);\\n}\\n\\n.title {\\n  text-align: center;\\n}\\n\\n#image {\\n  width: 150px;\\n  height: 150px;\\n  margin: auto;\\n}\\n\\n#imageButton {\\n  width: 180px;\\n  height: 155px;\\n}\\n\\n#imageCol {\\n  text-align: center;\\n}\\n\\n.fileInput {\\n  width: 0.1px;\\n  height: 0.1px;\\n  opacity: 0;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1;\\n}\\n\\n.fileInput label {\\n  color: #717171;\\n  background-color: white;\\n  display: inline-block;\\n  cursor: pointer;\\n  padding: 0.5em 1em;\\n  border: 1px solid #ccc;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF0aWVudC9wYXRpZW50LXNpZ251cC9wYXRpZW50LXNpZ251cC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx1REFBQTtBQUNKOztBQUVFO0VBQ0MseUJBQUE7QUFDSDs7QUFDRTtFQUNFLHlCQUFBO0FBRUo7O0FBQUU7RUFDRSw4RUFBQTtBQUdKOztBQURFO0VBQ0UseUJBQUE7QUFJSjs7QUFGRTtFQUNFLDhFQUFBO0FBS0o7O0FBSEU7RUFDSSxrQkFBQTtBQU1OOztBQUpJO0VBQ0UsWUFBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0FBT047O0FBSkk7RUFDRSxZQUFBO0VBQ0EsYUFBQTtBQU9OOztBQUxJO0VBQ0Usa0JBQUE7QUFRTjs7QUFOSTtFQUNFLFlBQUE7RUFDQSxhQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0FBU047O0FBUEk7RUFDRSxjQUFBO0VBQ0EsdUJBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtBQVVOIiwiZmlsZSI6InNyYy9hcHAvcGF0aWVudC9wYXRpZW50LXNpZ251cC9wYXRpZW50LXNpZ251cC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudHtcclxuICAgIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzkzRjlCOSwgIzFEOTc2Qyk7XHJcbiAgXHJcbiAgfVxyXG4gIGlvbi10b29sYmFye1xyXG4gICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuICBpb24tY2FyZC10aXRsZSB7XHJcbiAgICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuICBpb24tY2FyZHtcclxuICAgIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMTM0RTVFIDAlLCAjNzFCMjgwIDUxJSwgIzEzNEU1RSAxMDAlKTtcclxuICB9XHJcbiAgaW9uLWl0ZW17XHJcbiAgICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuICBpb24tYnV0dG9ue1xyXG4gICAgLS1iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMxMzRFNUUgMCUsICM3MUIyODAgNTElLCAjMTM0RTVFIDEwMCUpO1xyXG4gIH1cclxuICAudGl0bGV7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgICNpbWFnZXtcclxuICAgICAgd2lkdGg6IDE1MHB4O1xyXG4gICAgICBoZWlnaHQ6IDE1MHB4O1xyXG4gICAgICBtYXJnaW46IGF1dG87XHJcbiAgXHJcbiAgICB9XHJcbiAgICAjaW1hZ2VCdXR0b257XHJcbiAgICAgIHdpZHRoOiAxODBweDtcclxuICAgICAgaGVpZ2h0OiAxNTVweDtcclxuICAgIH1cclxuICAgICNpbWFnZUNvbHtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgLmZpbGVJbnB1dCB7XHJcbiAgICAgIHdpZHRoOiAwLjFweDtcclxuICAgICAgaGVpZ2h0OiAwLjFweDtcclxuICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB6LWluZGV4OiAtMTtcclxuICAgIH1cclxuICAgIC5maWxlSW5wdXQgICBsYWJlbCB7XHJcbiAgICAgIGNvbG9yOiAjNzE3MTcxO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MenuController, ToastController, Platform, AlertController } from '@ionic/angular';\nimport { PatientServiceService } from 'src/app/sdk/custom/patient-service.service';\nfunction base64toBlob(base64Data, contentType) {\n  contentType = contentType || '';\n  const sliceSize = 1024;\n  const byteCharacters = window.atob(base64Data);\n  const bytesLength = byteCharacters.length;\n  const slicesCount = Math.ceil(bytesLength / sliceSize);\n  const byteArrays = new Array(slicesCount);\n\n  for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    const begin = sliceIndex * sliceSize;\n    const end = Math.min(begin + sliceSize, bytesLength);\n\n    const bytes = new Array(end - begin);\n    for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n  return new Blob(byteArrays, { type: contentType });\n}\n@Component({\n  selector: 'app-patient-signup',\n  templateUrl: './patient-signup.page.html',\n  styleUrls: ['./patient-signup.page.scss'],\n})\nexport class PatientSignupPage implements OnInit {\n  Form: FormGroup;\n  loading = false;\n  img1: any;\n  email;\n  vissible =false;\n  code;\n  verifyLoading = false;\n  emailVerified = false;\n  disableEmailColumn = true;\n  constructor(private patientService: PatientServiceService,private menu: MenuController,public toastController: ToastController, private router :Router,private formBuilder: FormBuilder,private platform: Platform, public alertController: AlertController) { }\n\n  ngOnInit() {\n    this.Form = this.formBuilder.group({\n      username: [null, [Validators.required, Validators.pattern('^[a-zA-Z ]*$')]],\n      cnic: [null, [Validators.required,Validators.maxLength(15),Validators.minLength(13)]],\n      email: [null, [Validators.required,Validators.email]],\n      password: [null, [Validators.required]],\n      phone: [null, [Validators.required,Validators.minLength(12)]],\n      image: new FormControl(null),\n      imageUrl:[],\n      code:[]\n      //confirmPassword: [null, [Validators.required]],\n    });\n  }\n  onImagePicked(imageData: string | File) {\n    //console.log('imageData = ',imageData);\n    let imageFile;\n    if (typeof imageData === 'string') {\n      try {\n        imageFile = base64toBlob(\n          imageData.replace('data:image/jpeg;base64,', ''),\n          'image/jpeg'\n        );\n      } catch (error) {\n        console.log(error);\n        return;\n      }\n    } else {\n      imageFile = imageData;\n    }\n    console.log('image path = ',imageFile);\n    this.Form.patchValue({ image: imageFile });\n    \n  }\n  async signUpButton( ){\n    this.Form.controls['imageUrl'].setValue(this.patientService.imageURL);\n    console.log('form value = ',this.Form.value);\n    this.patientService.userRegister(this.Form.value).subscribe(\n      async data => {\n        \n        console.log('got response from server', data);\n\n        const toast = await this.toastController.create({\n          message: data.message,\n        // message: `${name} has been saved successfully.`,\n          duration: 3500\n        });\n        toast.present();\n        if(data.message === 'Signup successful'){\n          this.router.navigateByUrl('/home');\n        }\n\n        this.loading = false;\n      // this.router.navigateByUrl('/home');\n      },\n      async error => {\n        this.loading = false;\n        const alert = await this.alertController.create({\n          header: 'Alert',\n          //subHeader: 'Subtitle',\n          message: error.error.message,\n          buttons: ['OK']\n        });\n        alert.present();\n      }\n    );\n  }\n  sendEmail(){\n    console.log('email = ',this.Form.controls['email'].value);\n    this.patientService.sendMail({email:this.Form.controls['email'].value}).subscribe(\n      async data => {\n        this.verifyLoading = false;\n        console.log('got response from server', data);\n    \n        const toast = await this.toastController.create({\n          message: data.message,\n        // message: `${name} has been saved successfully.`,\n          duration: 3500\n        });\n  \n        this.code = data.code;\n        toast.present();\n        if(data.message === 'Email sent successfuly'){\n          this.vissible = true;\n          this.disableEmailColumn = false;\n        }\n    \n        this.loading = false;\n      // this.router.navigateByUrl('/home');\n      },\n      async error => {\n        this.loading = false;\n        const toast = await this.toastController.create({\n          message: error.error.message,\n        // message: `${name} has been saved successfully.`,\n          duration: 3500\n        });\n      });\n  }\n}\n\n"]}