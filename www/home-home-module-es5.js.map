{"version":3,"sources":["webpack:///src/app/home/forgot-pass/forgot-pass.component.html","webpack:///src/app/home/home.page.html","webpack:///src/app/home/forgot-pass/forgot-pass.component.scss","webpack:///src/app/home/forgot-pass/forgot-pass.component.ts","webpack:///src/app/home/home-routing.module.ts","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/home.page.scss","webpack:///src/app/home/home.page.ts"],"names":["ForgotPassComponent","modalController","menu","toastController","router","alertController","loading","vissible","emailVerified","sendCodeButton","verifyCodeButton","selector","template","routes","path","component","HomePageRoutingModule","imports","forChild","exports","HomePageModule","loader","provide","useFactory","deps","declarations","entryComponents","HomePage","_translate","formBuilder","enable","setDefaultLang","formInitializer","get","subscribe","res","console","log","title","username","password","userType","login","sign_Up","signUp","forgotPassword","create","modal","present","Form","group","email","required","slectedGender","value","header","message","buttons","alert","navigateByUrl","language"],"mappings":"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","file":"home-home-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"dark\\\" (click)=\\\"closeModal()\\\">\\n        <ion-icon color=\\\"dark\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <div id=\\\"title\\\">\\n    <ion-title>Get Password</ion-title>\\n  </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n \\n  <ion-grid>\\n    <ion-row>\\n<ion-col>\\n  <ion-item *ngIf=\\\"sendCodeButton\\\">\\n    <ion-label  position = \\\"floating\\\" >\\n      Email\\n    </ion-label>\\n    <ion-input type=\\\"email\\\" [(ngModel)]=\\\"email\\\"  >\\n    </ion-input>\\n  </ion-item>\\n</ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-button *ngIf=\\\"sendCodeButton\\\" [disabled]=\\\"!email\\\" expand=\\\"full\\\" shape = \\\"round\\\" (click)=\\\"sendEmail()\\\">send code\\n          &nbsp;<ion-spinner *ngIf=\\\"loading\\\"></ion-spinner>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-item *ngIf=\\\"vissible && verifyCodeButton\\\">\\n          <ion-label position = \\\"floating\\\" >\\n            Enter code\\n          </ion-label>\\n          <ion-input type =\\\"text\\\" [(ngModel)]=\\\"code\\\"  >\\n          </ion-input>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col  >\\n        <ion-button *ngIf=\\\"vissible && verifyCodeButton\\\" expand=\\\"full\\\" shape = \\\"round\\\" (click)=\\\"verifyCode()\\\" >\\n          Verify</ion-button>\\n        </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-item *ngIf=\\\"emailVerified\\\">\\n          <ion-label position = \\\"floating\\\" >\\n            new password\\n          </ion-label>\\n          <ion-input type =\\\"password\\\" [(ngModel)]=\\\"password\\\"  >\\n          </ion-input>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-item *ngIf=\\\"emailVerified\\\">\\n          <ion-label position = \\\"floating\\\" >\\n            Conform password\\n          </ion-label>\\n          <ion-input type =\\\"password\\\" [(ngModel)]=\\\"conformPassword\\\"  >\\n          </ion-input>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n  <ion-row>\\n    <ion-col>\\n      <ion-button *ngIf=\\\"emailVerified \\\" [disabled]=\\\"password !== conformPassword\\\" expand=\\\"full\\\" shape = \\\"round\\\" (click)=\\\"changePassword()\\\">Save\\n        &nbsp;<ion-spinner *ngIf=\\\"loading\\\"></ion-spinner>\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n  \\n  </ion-grid>\\n\\n\\n\\n</ion-content>\";","export default \"<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n        <div [formGroup]=\\\"Form\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              \\n                <ion-select [(ngModel)]=\\\"language\\\"  [ngModelOptions]=\\\"{ standalone: true }\\\" (ionChange)=\\\"optionsFn()\\\">\\n                  <ion-select-option value=\\\"English\\\">English</ion-select-option>\\n                  <ion-select-option value=\\\"Pashtoo\\\">Pashtoo</ion-select-option>\\n                </ion-select>\\n                <div class=\\\"title\\\">\\n                  <ion-card-title >{{title}}</ion-card-title>\\n                </div>\\n            </ion-card-header>\\n          </ion-card>\\n          <ion-card-content>\\n            <ion-item>\\n              <ion-label color=\\\"light\\\" position=\\\"floating\\\">\\n                {{username }}\\n              </ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"email\\\">\\n              </ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label color=\\\"light\\\" position=\\\"floating\\\">\\n                {{password}}\\n              </ion-label>\\n              <ion-input type=\\\"password\\\" formControlName=\\\"password\\\">\\n              </ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label color=\\\"light\\\">{{userType}}</ion-label>\\n              <ion-select formControlName=\\\"slectedGender\\\" >\\n                <ion-select-option value=\\\"patient\\\">Patient</ion-select-option>\\n                <ion-select-option value=\\\"doctor\\\">Doctor</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size=\\\"7\\\">\\n              </ion-col>\\n              <ion-col size=\\\"5\\\">\\n                <ion-row>\\n                  <a (click)=\\\"forgotPass()\\\" id=\\\"pass\\\">{{forgotPassword}}</a>\\n                </ion-row>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row justify-content-center>\\n              <div padding id=\\\"buttonDIv\\\">\\n                <ion-button size=\\\"large\\\" id=\\\"logButton\\\" expand=\\\"full\\\" shape=\\\"round\\\" (click)=\\\"loginButton()\\\"\\n                  [disabled]=\\\"!Form.valid\\\">\\n                  {{login}} &nbsp;<ion-spinner *ngIf=\\\"loading\\\"></ion-spinner>\\n                </ion-button>\\n              </div>\\n            </ion-row>\\n            <ion-row justify-content-center>\\n              <div padding id=\\\"buttonDIv\\\">\\n                <ion-button size=\\\"large\\\" color=\\\"light\\\" expand=\\\"full\\\" shape=\\\"round\\\" fill=\\\"outline\\\" (click)=\\\"signUp()\\\">\\n                  {{sign_Up}}</ion-button>\\n              </div>\\n            </ion-row>\\n          </ion-card-content>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","export default \"ion-content {\\n  --background: linear-gradient(to top, #93F9B9, #1D976C);\\n}\\n\\nion-toolbar {\\n  --background: linear-gradient(to right, #e8faff 0%, #71B280 51%, #134E5E 100%);\\n  color: white;\\n}\\n\\nion-card-title {\\n  --background: transparent;\\n}\\n\\nion-card {\\n  --background: linear-gradient(to right, #e8faff 0%, #71B280 51%, #134E5E 100%);\\n  color: white;\\n}\\n\\nion-item {\\n  --background: transparent;\\n}\\n\\nion-button {\\n  --background: linear-gradient(to right, #134E5E 0%, #71B280 51%, #134E5E 100%);\\n}\\n\\n#title {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9mb3Jnb3QtcGFzcy9mb3Jnb3QtcGFzcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVEQUFBO0FBQ0o7O0FBRUU7RUFDRSw4RUFBQTtFQUNBLFlBQUE7QUFDSjs7QUFDRTtFQUNFLHlCQUFBO0FBRUo7O0FBQUU7RUFDRSw4RUFBQTtFQUNBLFlBQUE7QUFHSjs7QUFERTtFQUNFLHlCQUFBO0FBSUo7O0FBRkU7RUFDRSw4RUFBQTtBQUtKOztBQUhFO0VBQ0Usa0JBQUE7QUFNSiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvZm9yZ290LXBhc3MvZm9yZ290LXBhc3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudHtcclxuICAgIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzkzRjlCOSwgIzFEOTc2Qyk7XHJcbiAgXHJcbiAgfVxyXG4gIGlvbi10b29sYmFye1xyXG4gICAgLS1iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICNlOGZhZmYgMCUsICM3MUIyODAgNTElLCAjMTM0RTVFIDEwMCUpO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBpb24tY2FyZC10aXRsZSB7XHJcbiAgICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuICBpb24tY2FyZHtcclxuICAgIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZThmYWZmIDAlLCAjNzFCMjgwIDUxJSwgIzEzNEU1RSAxMDAlKTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcbiAgaW9uLWl0ZW17XHJcbiAgICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuICBpb24tYnV0dG9ue1xyXG4gICAgLS1iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMxMzRFNUUgMCUsICM3MUIyODAgNTElLCAjMTM0RTVFIDEwMCUpO1xyXG4gIH1cclxuICAjdGl0bGV7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController, MenuController, ToastController, AlertController } from '@ionic/angular';\n//import { AuthService } from 'src/app/sdk/core/auth.service';\nimport { Router } from '@angular/router';\n// import { CustomersService } from 'src/app/sdk/custom/customers.service';\n// import { ServiceProvidersService } from 'src/app/sdk/custom/service-providers.service';\n// import { MixedService } from 'src/app/sdk/custom/mixed.service';\n// import { serviceProvider } from 'src/app/customer-dashboard/service-provider.model';\n\n@Component({\n  selector: 'app-forgot-pass',\n  templateUrl: './forgot-pass.component.html',\n  styleUrls: ['./forgot-pass.component.scss'],\n})\nexport class ForgotPassComponent implements OnInit {\n  email;\n  loading = false;\n  vissible = false;\n  code;\n  user;\n  password;\n  customerBody:customer;\n  //serviceProviderBody:serviceProvider;\n  serverCode;\n  emailVerified = false;\n  sendCodeButton = true;\n  verifyCodeButton = true;\n  conformPassword;\n\n  constructor( private modalController: ModalController, private menu: MenuController,public toastController: ToastController, private router: Router, public alertController: AlertController) {}\n\n  ngOnInit() {}\n//   sendEmail(){\n//     this.loading = true;\n// console.log('email =',this.email);\n// this.mixedService.sendPassword({email:this.email,message:'whats up'}).subscribe(\n//   async data => {\n//     this.loading = false;\n//     console.log('got response from server', data);\n//     this.user = data.user;\n//     this.serverCode = data.code;\n//     if(this.user==='customer'){\n//       this.customerBody = data.body;\n\n//     }\n//     else if(this.user === 'serviceProvider'){\n//       this.serviceProviderBody = data.body;\n//     }\n//     else{\n//       console.log('code expired')\n//     }\n\n//     const toast = await this.toastController.create({\n//       message: data.message,\n//     // message: `${name} has been saved successfully.`,\n//       duration: 3500\n//     });\n//     toast.present();\n//     if(data.message === 'Email sent successfuly'){\n//       this.vissible = true;\n//       this.sendCodeButton = false;\n//     }\n\n//     this.loading = false;\n//   // this.router.navigateByUrl('/home');\n//   },\n//   async error => {\n//     this.loading = false;\n//     const alert = await this.alertController.create({\n//       header: 'Alert',\n//       //subHeader: 'Subtitle',\n//       message: error.error.message,\n//       buttons: ['OK']\n//     });\n//     alert.present();\n//   }\n// );\n//   }\n//   async verifyCode(){\n//     if(this.code ===this.serverCode ){\n//       this.emailVerified = true;\n//       this.verifyCodeButton = false;\n//       const toast = await this.toastController.create({\n//         message: 'Email verified',\n//       // message: `${name} has been saved successfully.`,\n//         duration: 3500\n//       });\n//       toast.present();\n//     }\n//     else{\n//       const toast = await this.toastController.create({\n//         message: 'Invalid code',\n//       // message: `${name} has been saved successfully.`,\n//         duration: 3500\n//       });\n//       toast.present();\n//     }\n\n//   }\n//   async changePassword(){\n//     this.loading = true;\n//     if(this.user === 'customer'){\n//       this.customerBody.password = this.password;\n//       this.mixedService.udpateUser(this.customerBody._id,this.customerBody).subscribe(\n//         async data => {\n          \n//           console.log('got response from server', data);\n//           this.modalController.dismiss();\n//           const toast = await this.toastController.create({\n//             message: data.message,\n//            // message: `${name} has been saved successfully.`,\n//             duration: 3500\n//           });\n//           toast.present();\n//              this.router.navigateByUrl('/home');\n         \n\n//           this.loading = false;\n//          // this.router.navigateByUrl('/home');\n//         },\n//         async error => {\n//           this.loading = false;\n//           const alert = await this.alertController.create({\n//             header: 'Alert',\n//             //subHeader: 'Subtitle',\n//             message: error.error.message,\n//             buttons: ['OK']\n//           });\n//           alert.present();\n//         }\n//       );\n\n//   }else if(this.user === 'serviceProvider'){\n//     this.serviceProviderBody.password = this.password;\n//     let observable = await this.mixedService.editServiceProvider(this.serviceProviderBody._id,this.serviceProviderBody);\n//     observable.subscribe(\n//       async data => {\n//         console.log('got response from server', data);\n//         //this.loading = false;\n//         const toast = await this.toastController.create({\n//           message: data.message,\n//          // message: `${name} has been saved successfully.`,\n//           duration: 3500\n//         });\n//         toast.present();\n//         // if(data.message === 'Signup successful'){\n//         //   this.router.navigateByUrl('/home');\n//         // }\n\n//         this.loading = false;\n//       },\n//       async error => {\n//         this.loading = false;\n//         console.log('error', error);\n//         const alert = await this.alertController.create({\n//           header: 'Alert',\n//           //subHeader: 'Subtitle',\n//           message: error.error.message,\n//           buttons: ['OK']\n//         });\n//         alert.present();\n//       }\n//     );\n\n//   }\n//   else{\n//     console.log('Code expired try again')\n//   }\n// }\n// closeModal() {\n//   this.modalController.dismiss();\n// }\n\n}\ninterface customer {\n  shortID:string;\n  _id: string;\n  username: string;\n  email: string;\n  password: string;\n  is_deleted: boolean;\n  phone: string;\n  cnic: string;\n  imageUrl:string;\n  \n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { ForgotPassComponent } from './forgot-pass/forgot-pass.component';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { HttpLoaderFactory } from '../app.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    HomePageRoutingModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  declarations: [HomePage,ForgotPassComponent],\n  entryComponents: [ForgotPassComponent]\n})\nexport class HomePageModule {}\n","export default \".title {\\n  text-align: center;\\n}\\n\\na:hover {\\n  cursor: pointer;\\n}\\n\\na {\\n  color: black;\\n}\\n\\nion-content {\\n  --background: radial-gradient(#ff5e7c 10%, #26032e 50%, #6bbae8 80%);\\n}\\n\\nion-item {\\n  --background: transparent;\\n}\\n\\nion-card {\\n  --background: linear-gradient(to right, #603813 0%, #b29f94 51%, #603813 100%);\\n}\\n\\nion-card-title {\\n  color: white;\\n  font-weight: bold;\\n  font-size: x-large;\\n  font-family: serif;\\n}\\n\\n#logButton {\\n  --background: linear-gradient(to right, #1A2980 0%, #26D0CE 51%, #1A2980 100%);\\n}\\n\\n#buttonDIv {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLGtCQUFBO0FBQUY7O0FBRUE7RUFDRSxlQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxZQUFBO0FBRUY7O0FBQUE7RUFDRSxvRUFBQTtBQUdGOztBQURBO0VBQ0UseUJBQUE7QUFJRjs7QUFGQTtFQUNFLDhFQUFBO0FBS0Y7O0FBRkE7RUFDRSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0FBS0Y7O0FBSEE7RUFDRSw4RUFBQTtBQU1GOztBQUpBO0VBQ0UsV0FBQTtBQU9GIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnRpdGxle1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5hOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuYXtcbiAgY29sb3I6IGJsYWNrO1xufVxuaW9uLWNvbnRlbnR7XG4gIC0tYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KCNmZjVlN2MgMTAlLCAjMjYwMzJlIDUwJSwgIzZiYmFlOCA4MCUpO1xufVxuaW9uLWl0ZW17XG4gIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5pb24tY2FyZCB7XG4gIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjNjAzODEzIDAlLCAjYjI5Zjk0IDUxJSwgIzYwMzgxMyAxMDAlKTtcbiAgXG59XG5pb24tY2FyZC10aXRsZXtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiB4LWxhcmdlO1xuICBmb250LWZhbWlseTogc2VyaWY7XG59XG4jbG9nQnV0dG9ue1xuICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzFBMjk4MCAwJSwgIzI2RDBDRSA1MSUsICMxQTI5ODAgMTAwJSk7XG59XG4jYnV0dG9uREl2e1xuICB3aWR0aDogMTAwJTtcbn0iXX0= */\";","\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n//import { ValueAccessor } from '@ionic/angular/dist/directives/control-value-accessors/value-accessor';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// import { CustomersService } from '../sdk/custom/customers.service';\n// import { ServiceProvidersService } from '../sdk/custom/service-providers.service';\nimport { AlertController, ToastController, MenuController, ModalController } from '@ionic/angular';\nimport { ForgotPassComponent } from './forgot-pass/forgot-pass.component';\n// import { AuthService } from '../sdk/core/auth.service';\n// import { ForgotPassComponent } from './forgot-pass/forgot-pass.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  loading = false;\n  Form: FormGroup;\n  language;\n  title: string;\n  username: any;\n  password: any;\n  userType: any;\n  login: any;\n  sign_Up: any;\n  forgotPassword: any;\n  constructor( private _translate: TranslateService, private modalController: ModalController, private menu: MenuController,public toastController: ToastController, private router: Router, private formBuilder: FormBuilder, public alertController: AlertController) {\n    this.menu.enable(false, 'first');\n    this.menu.enable(false, 'custom');\n    this.menu.enable(false, 'end');\n    _translate.setDefaultLang('en');\n   }\n  ngOnInit() {\n    this.formInitializer();\n    this._translate.get(\"Home\").subscribe((res: any) => {\n      console.log('translation = ',res)\n      this.title = res.title;\n      this.username = res.username;\n      this.password = res.password;\n      this.userType = res.userType;\n      this.login = res.login;\n      this.sign_Up = res.signUp;\n      this.forgotPassword = res.forgotPassword;\n    }); \n  }\n  async forgotPass(){\n    console.log('clicked');\n    const modal = await this.modalController.create({\n      component: ForgotPassComponent\n    });\n    return await modal.present();\n  }\n  formInitializer() {\n    this.Form = this.formBuilder.group({\n      email: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n      slectedGender: [null, [Validators.required]]\n    });\n  }\n  ionViewWillEnter(){\n    this.formInitializer();\n    this.menu.enable(false, 'first');\n    this.menu.enable(false, 'custom');\n    this.menu.enable(false, 'end');\n  }\n  async signUp() {\n    if(this.Form.value['slectedGender'] === null){\n      const alert = await this.alertController.create({\n        header: 'Alert',\n        //subHeader: 'Subtitle',\n        message: 'please select user type',\n        buttons: ['OK']\n      });\n      alert.present();\n    }\n    if (this.Form.value['slectedGender'] === \"patient\") {\n      this.router.navigateByUrl('/patient-signup');\n    }\n    if (this.Form.value['slectedGender'] === \"doctor\") {\n      this.router.navigateByUrl('/doctor-signup');\n    }\n\n  }\n  public optionsFn(): void { //here item is an object \n    if(this.language == 'Pashtoo'){\n      this._translate.setDefaultLang('es');\n      this._translate.get(\"Home\").subscribe((res: any) => {\n        console.log('translation = ',res)\n        this.title = res.title;\n        this.username = res.username;\n        this.password = res.password;\n        this.userType = res.userType;\n        this.login = res.login;\n        this.sign_Up = res.signUp;\n        this.forgotPassword = res.forgotPassword;\n      }); \n    }\n    else{\n      this._translate.setDefaultLang('en');\n      this._translate.get(\"Home\").subscribe((res: any) => {\n        console.log('translation = ',res)\n        this.title = res.title;\n        this.username = res.username;\n        this.password = res.password;\n        this.userType = res.userType;\n        this.login = res.login;\n        this.sign_Up = res.signUp;\n        this.forgotPassword = res.forgotPassword;\n      }); \n    }\n  }\n   loginButton() {\n    this.router.navigateByUrl('/patient-dashboard');\n   }\n  // loginButton() {\n  //   this.loading = true;\n  //   const loginData = this.Form.value;\n  //   if (this.Form.value['slectedGender'] === \"customer\") {\n  //     this.customerService.customerLogin(loginData).subscribe(\n  //       async data => {\n  //         this.customerService.saveCustomerId(data.id);\n  //         console.log('got response from server', data);\n  //         this.authService.saveTokenToStorage(data.token);\n  //        this.loading = false;\n  //        const toast = await this.toastController.create({\n  //         message: data.message,\n  //        // message: `${name} has been saved successfully.`,\n  //         duration: 3500\n  //       });\n  //       toast.present();\n  //         this.router.navigateByUrl('/customer-profile');\n  //       },\n  //       async error => {\n  //         // this.loading = false;\n  //         const toast = await this.toastController.create({\n  //           message: error.error.message,\n  //          // message: `${name} has been saved successfully.`,\n  //           duration: 3500\n  //         });\n  //         toast.present();\n  //         this.loading = false;\n  //         //this.books.addBook(this.nameText, this.authorText);\n\n  //         console.log('error', error.error.message);\n  //       });\n  //   }\n  //   else {\n  //     console.log('loginData', loginData);\n  //     this.serviceProvidersService.serviceProviderLogin(loginData).subscribe(\n  //       async data => {\n  //         this.serviceProvidersService.saveServiceProviderId(data.id);\n  //         console.log('got response from server', data);\n  //         this.authService.saveTokenToStorage(data.token);\n  //         this.loading = false;\n  //        const toast = await this.toastController.create({\n  //         message: data.message,\n  //        // message: `${name} has been saved successfully.`,\n  //         duration: 3500\n  //       });\n  //       toast.present();\n  //         this.router.navigateByUrl('/service-provider-profile');\n  //       },\n  //       async error => {\n  //         // this.loading = false;\n  //         const toast = await this.toastController.create({\n  //           message: error.error.message,\n  //          // message: `${name} has been saved successfully.`,\n  //           duration: 3500\n  //         });\n  //         toast.present();\n  //         this.loading = false;\n  //       });\n  //   }\n  // }\n}\n\n\n"]}