{"version":3,"sources":["webpack:///src/app/doctor/doctor-signup/checkup-timing/checkup-timing.component.html","webpack:///src/app/doctor/doctor-signup/doctor-signup.page.html","webpack:///src/app/doctor/doctor-signup/checkup-timing/checkup-timing.component.scss","webpack:///src/app/doctor/doctor-signup/checkup-timing/checkup-timing.component.ts","webpack:///src/app/doctor/doctor-signup/doctor-signup-routing.module.ts","webpack:///src/app/doctor/doctor-signup/doctor-signup.module.ts","webpack:///src/app/doctor/doctor-signup/doctor-signup.page.scss","webpack:///src/app/doctor/doctor-signup/doctor-signup.page.ts"],"names":["CheckupTimingComponent","modalCtrl","datepipe","doctorService","menu","toastController","router","formBuilder","platform","alertController","slots","Days","Form","group","timingStart","timingEnd","diagnoseTime","numberOfSlots","offDays","dismiss","createSlots","timingValueFrom","transform","timingValueEnd","patchValue","count","console","log","value","doctorTiming","diagnoseTIme","Date","dif","getTime","slotN","Math","floor","random","slot","push","DateAndTime","status","slotNumber","slotId","splice","length","selector","template","routes","path","component","DoctorSignupPageRoutingModule","imports","forChild","exports","DoctorSignupPageModule","declarations","entryComponents","base64toBlob","base64Data","contentType","sliceSize","byteCharacters","window","atob","bytesLength","slicesCount","ceil","byteArrays","Array","sliceIndex","begin","end","min","bytes","offset","i","charCodeAt","Uint8Array","Blob","type","DoctorSignupPage","geolocation","nativeGeocoder","modalController","patientService","loading","vissible","verifyLoading","emailVerified","disableEmailColumn","specialities","username","required","pattern","cnic","maxLength","minLength","email","password","phone","image","imageUrl","timing","Location","city","location","n","address","split","loc","imageData","imageFile","replace","error","controls","setValue","imageURL","doctorRegister","subscribe","data","create","message","duration","toast","present","navigateByUrl","header","buttons","alert","sendMail","code","modal"],"mappings":"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","file":"doctor-doctor-signup-doctor-signup-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button color=\\\"dark\\\" (click)=\\\"closeModal()\\\">\\n          <ion-icon color=\\\"light\\\" name=\\\"arrow-back\\\"></ion-icon>\\n        </ion-button>      </ion-buttons>\\n      <div class=\\\"title\\\">\\n        <ion-title>Checkup Time</ion-title>\\n      </div>\\n    </ion-toolbar>\\n  </ion-header>\\n  <div class=\\\"mainDiv\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-md=\\\"8\\\" offset-md=\\\"2\\\">\\n          <div [formGroup]=\\\"Form\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">\\n              Timing From\\n            </ion-label>\\n            <ion-datetime displayFormat=\\\"hh-mm-A\\\" [(ngModel)]=\\\"timingValueFrom\\\" [ngModelOptions]=\\\"{ standalone: true }\\\">\\n            </ion-datetime>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">\\n              Timing End\\n            </ion-label>\\n            <ion-datetime displayFormat=\\\"hh-mm-A\\\" [(ngModel)]=\\\"timingValueEnd\\\" [ngModelOptions]=\\\"{ standalone: true }\\\">\\n            </ion-datetime>\\n          </ion-item>\\n          <!-- <ion-item>\\n            <ion-label position=\\\"floating\\\">\\n              Diagnose Time\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"diagnoseTime\\\">\\n            </ion-input>\\n          </ion-item> -->\\n          <ion-item>\\n            <ion-label>Diagnose Time</ion-label>\\n            <ion-select formControlName=\\\"diagnoseTime\\\">\\n              <ion-select-option value=\\\"1h\\\">1 Hour</ion-select-option>\\n              <ion-select-option value=\\\"30m\\\">30 Minutes</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item>\\n            <ion-select multiple=\\\"true\\\" text-center interface=\\\"action-sheet\\\" formControlName=\\\"offDays\\\" interface=\\\"popover\\\" placeholder=\\\"offDays\\\">\\n              <ion-select-option *ngFor=\\\"let day of Days\\\" [value]=\\\"day\\\">{{day}}</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-button expand=\\\"full\\\" shape=\\\"round\\\" (click)=\\\"submit()\\\" >\\n            Save \\n          </ion-button>\\n        </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\";","export default \"<ion-content>\\n  <ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button (click)=\\\"back()\\\" defaultHref=\\\"/home\\\"></ion-back-button>\\n      </ion-buttons>\\n      <div class=\\\"title\\\">\\n        <ion-title>Registration</ion-title>\\n      </div>\\n    </ion-toolbar>\\n  </ion-header>\\n  <div class=\\\"mainDiv\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-md=\\\"8\\\" offset-md=\\\"2\\\">\\n          <div [formGroup]=\\\"Form\\\">\\n            <ion-card>\\n              <ion-card-header>\\n                <div class=\\\"title\\\">\\n                  <ion-card-title color=\\\"light\\\" size=\\\"large\\\" text-center>Welcome</ion-card-title>\\n                </div>\\n              </ion-card-header>\\n            </ion-card>\\n            <ion-card-content>\\n              <ion-row>\\n                <ion-col size=\\\"6\\\">\\n                  <ion-item>\\n                    <ion-label position=\\\"floating\\\">\\n                      User Name\\n                    </ion-label>\\n                    <ion-input type=\\\"text\\\" formControlName=\\\"username\\\">\\n                    </ion-input>\\n                  </ion-item>\\n                  <ion-item>\\n                    <ion-label position=\\\"floating\\\">\\n                      Cnic Number\\n                    </ion-label>\\n                    <ion-input type=\\\"tel\\\" formControlName=\\\"cnic\\\" appCnicMask maxlength=\\\"15\\\">\\n                    </ion-input>\\n                  </ion-item>\\n                </ion-col>\\n                <ion-col size=\\\"6\\\" id=\\\"imageCol\\\">\\n                  <app-image-picker (imagePick)=\\\"onImagePicked($event)\\\"></app-image-picker>\\n                </ion-col>\\n              </ion-row>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">\\n                  Phone#\\n                </ion-label>\\n                <ion-input type=\\\"tel\\\" formControlName=\\\"phone\\\" appPhoneMask maxlength=\\\"12\\\">\\n                </ion-input>\\n              </ion-item>\\n              <ion-row>\\n                <ion-col size=\\\"8\\\">\\n                  <ion-item *ngIf=\\\"disableEmailColumn\\\">\\n                    <ion-label position=\\\"floating\\\">\\n                      Valid Gmail Address\\n                    </ion-label>\\n                    <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" id=\\\"emailaddress\\\">\\n                    </ion-input>\\n                  </ion-item>\\n                </ion-col>\\n                <ion-col size=\\\"4\\\">\\n                  <ion-button *ngIf=\\\"disableEmailColumn\\\" expand=\\\"full\\\" [disabled]=\\\"!Form.value['email']\\\"\\n                    (click)=\\\"sendEmail()\\\">\\n                    Send Code &nbsp;<ion-spinner *ngIf=\\\"verifyLoading\\\"></ion-spinner>\\n                  </ion-button>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col size=\\\"8\\\">\\n                  <ion-item *ngIf=\\\"vissible\\\">\\n                    <ion-label position=\\\"floating\\\">\\n                      Enter code\\n                    </ion-label>\\n                    <ion-input type=\\\"text\\\" formControlName=\\\"code\\\">\\n                    </ion-input>\\n                  </ion-item>\\n                </ion-col>\\n                <ion-col size=\\\"4\\\">\\n                  <ion-button *ngIf=\\\"vissible\\\" expand=\\\"full\\\" (click)=\\\"verifyCode()\\\">\\n                    Verify</ion-button>\\n                </ion-col>\\n              </ion-row>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">\\n                  Password\\n                </ion-label>\\n                <ion-input type=\\\"password\\\" formControlName=\\\"password\\\">\\n                </ion-input>\\n              </ion-item>\\n             \\n              <ion-item>\\n                <ion-select multiple=\\\"true\\\" text-center interface=\\\"action-sheet\\\" formControlName=\\\"specialities\\\" (ionChange)=\\\"optionsFn()\\\" interface=\\\"popover\\\" placeholder=\\\"Specialities\\\">\\n                  <ion-select-option *ngFor=\\\"let employee of specialities\\\" [value]=\\\"employee\\\">{{employee}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-button expand=\\\"full\\\" shape=\\\"round\\\" (click) = \\\"CheckupTIming()\\\">\\n                Checkup Timing\\n               </ion-button >\\n              <ion-row justify-content: end>\\n                <ion-col class=\\\"ion-text-center\\\">\\n                  <ion-button expand=\\\"full\\\" shape=\\\"round\\\" (click)=\\\"signUpButton()\\\" [disabled]=\\\"!Form.valid\\\">\\n                    Sign Up &nbsp;<ion-spinner *ngIf=\\\"loading\\\"></ion-spinner>\\n                  </ion-button>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row >\\n                <ion-col siz-sm=\\\"3\\\" offset-sm=\\\"3\\\">\\n               <app-location-picker  (locationPick)=\\\"onLocationPicked($event)\\\"></app-location-picker>\\n                </ion-col>\\n              </ion-row>\\n            </ion-card-content>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n\\n</ion-content>\\n\";","export default \"ion-content {\\n  --background: linear-gradient(to top, #93F9B9, #1D976C);\\n}\\n\\nion-toolbar {\\n  --background: linear-gradient(to right, #134E5E 0%, #71B280 51%, #134E5E 100%);\\n}\\n\\nion-list {\\n  background-color: transparent;\\n}\\n\\nion-card-content {\\n  --background: transparent;\\n}\\n\\nion-menu-toggle {\\n  --background: transparent;\\n}\\n\\nion-select-option {\\n  color: black;\\n}\\n\\nion-card {\\n  --background: transparent;\\n}\\n\\nion-item {\\n  --background: transparent;\\n}\\n\\nion-button {\\n  --background: linear-gradient(to right, #134E5E 0%, #71B280 51%, #134E5E 100%);\\n}\\n\\n.title {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9jdG9yL2RvY3Rvci1zaWdudXAvY2hlY2t1cC10aW1pbmcvY2hlY2t1cC10aW1pbmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSx1REFBQTtBQUZKOztBQUtFO0VBQ0UsOEVBQUE7QUFGSjs7QUFJRTtFQUNFLDZCQUFBO0FBREo7O0FBR0U7RUFDRSx5QkFBQTtBQUFKOztBQUVFO0VBQ0UseUJBQUE7QUFDSjs7QUFDRTtFQUNFLFlBQUE7QUFFSjs7QUFFRTtFQUNFLHlCQUFBO0FBQ0o7O0FBQ0U7RUFDRSx5QkFBQTtBQUVKOztBQUFFO0VBQ0UsOEVBQUE7QUFHSjs7QUFERTtFQUNJLGtCQUFBO0FBSU4iLCJmaWxlIjoic3JjL2FwcC9kb2N0b3IvZG9jdG9yLXNpZ251cC9jaGVja3VwLXRpbWluZy9jaGVja3VwLXRpbWluZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vICNzY3JvbHtcclxuLy8gaGVpZ2h0OiAxODBweDtcclxuLy8gfVxyXG5pb24tY29udGVudHtcclxuICAgIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzkzRjlCOSwgIzFEOTc2Qyk7XHJcbiAgXHJcbiAgfVxyXG4gIGlvbi10b29sYmFye1xyXG4gICAgLS1iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMxMzRFNUUgMCUsICM3MUIyODAgNTElLCAjMTM0RTVFIDEwMCUpO1xyXG4gIH1cclxuICBpb24tbGlzdHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuICBpb24tY2FyZC1jb250ZW50e1xyXG4gICAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICB9XHJcbiAgaW9uLW1lbnUtdG9nZ2xle1xyXG4gICAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICB9XHJcbiAgaW9uLXNlbGVjdC1vcHRpb24ge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gIH1cclxuICBcclxuICBcclxuICBpb24tY2FyZHtcclxuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG4gIGlvbi1pdGVte1xyXG4gICAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICB9XHJcbiAgaW9uLWJ1dHRvbntcclxuICAgIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMTM0RTVFIDAlLCAjNzFCMjgwIDUxJSwgIzEzNEU1RSAxMDAlKTtcclxuICB9XHJcbiAgLnRpdGxle1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgIFxyXG4gICAiXX0= */\";","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MenuController, ToastController, Platform, AlertController, ModalController } from '@ionic/angular';\nimport { DoctorService } from 'src/app/sdk/custom/doctor.service';\n\n@Component({\n  selector: 'app-checkup-timing',\n  templateUrl: './checkup-timing.component.html',\n  styleUrls: ['./checkup-timing.component.scss'],\n})\nexport class CheckupTimingComponent implements OnInit {\n  Form: FormGroup;\n  timingValueFrom;\n  timingValueEnd;\n  slots: any = [];\n  Days: string[] = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  count: number;\n  constructor(private modalCtrl: ModalController, public datepipe: DatePipe, private doctorService: DoctorService, private menu: MenuController, public toastController: ToastController, private router: Router, private formBuilder: FormBuilder, private platform: Platform, public alertController: AlertController) { }\n\n  ngOnInit() {\n    this.Form = this.formBuilder.group({\n      timingStart: [],\n      timingEnd: [],\n      diagnoseTime: [],\n      slots: [[]],\n      numberOfSlots: [],\n      offDays: [[]]\n      //confirmPassword: [null, [Validators.required]],\n    });\n  }\n\n  closeModal() {\n    this.modalCtrl.dismiss();\n  }\n  submit() {\n    this.createSlots();\n    this.timingValueFrom = this.datepipe.transform(this.timingValueFrom, 'shortTime');\n    this.timingValueEnd = this.datepipe.transform(this.timingValueEnd, 'shortTime');\n\n    this.Form.patchValue({ slots: this.slots, numberOfSlots: this.count, timingStart: this.timingValueFrom, timingEnd: this.timingValueEnd });\n    console.log('form =', this.Form.value);\n    this.doctorService.doctorTiming = this.Form.value;\n    this.modalCtrl.dismiss();\n  }\n  createSlots() {\n    let diagnoseTIme;\n    if (this.Form.value['diagnoseTime'] == '1h') {\n      diagnoseTIme = 3600000;\n    } else {\n      diagnoseTIme = 30 * 60000;\n    }\n    this.timingValueFrom = new Date(this.timingValueFrom);\n    //this.timingValueFrom = this.datepipe.transform(this.timingValueFrom, 'shortTime');\n    this.timingValueEnd = new Date(this.timingValueEnd);\n    // this.timingValueEnd = this.datepipe.transform(this.timingValueEnd, 'shortTime');\n    console.log('start time ', this.timingValueFrom);\n\n    console.log('end time ', this.timingValueEnd);\n    this.count = 0;\n    let dif = this.timingValueFrom.getTime();\n    while (dif < this.timingValueEnd.getTime()) {\n      let slotN = 'slot' + Math.floor(Math.random() * 1000) + 1;\n      this.count++;\n      let slot = new Date(dif);\n      this.slots.push({ DateAndTime: this.datepipe.transform(slot, 'dd/MM/yyyy hh:mm a'), status: 'empty', slotNumber: this.count, slotId: slotN })\n      // console.log(\"Hour Slot --->\" + this.datepipe.transform(slot, 'dd/MM/yyyy hh:mm a'));\n      dif += diagnoseTIme;\n    }\n    this.slots.splice(this.slots.length - 1, 1)\n    console.log('this.slots --->', this.slots);\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DoctorSignupPage } from './doctor-signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DoctorSignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoctorSignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DoctorSignupPageRoutingModule } from './doctor-signup-routing.module';\n\nimport { DoctorSignupPage } from './doctor-signup.page';\nimport { MasksModule } from 'src/app/shared/masks/masks.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CheckupTimingComponent } from './checkup-timing/checkup-timing.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MasksModule,\n    SharedModule,\n    ReactiveFormsModule,\n    DoctorSignupPageRoutingModule\n  ],\n  declarations: [DoctorSignupPage,CheckupTimingComponent],\n  entryComponents: [CheckupTimingComponent]\n\n})\nexport class DoctorSignupPageModule {}\n","export default \"ion-content {\\n  --background: linear-gradient(to top, #93F9B9, #1D976C);\\n}\\n\\nion-toolbar {\\n  --background: transparent;\\n}\\n\\nion-card-title {\\n  --background: transparent;\\n}\\n\\nion-card {\\n  --background: linear-gradient(to right, #134E5E 0%, #71B280 51%, #134E5E 100%);\\n}\\n\\nion-item {\\n  --background: transparent;\\n}\\n\\nion-button {\\n  --background: linear-gradient(to right, #134E5E 0%, #71B280 51%, #134E5E 100%);\\n}\\n\\n.title {\\n  text-align: center;\\n}\\n\\n#image {\\n  width: 150px;\\n  height: 150px;\\n  margin: auto;\\n}\\n\\n#imageButton {\\n  width: 180px;\\n  height: 155px;\\n}\\n\\n#imageCol {\\n  text-align: center;\\n}\\n\\n.fileInput {\\n  width: 0.1px;\\n  height: 0.1px;\\n  opacity: 0;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1;\\n}\\n\\n.fileInput label {\\n  color: #717171;\\n  background-color: white;\\n  display: inline-block;\\n  cursor: pointer;\\n  padding: 0.5em 1em;\\n  border: 1px solid #ccc;\\n  cursor: pointer;\\n}\\n\\n#map_canvas {\\n  width: 90%;\\n  height: 80%;\\n  border: 1px solid red;\\n}\\n\\n#address {\\n  padding: 10px;\\n  font-size: 18px;\\n  font-weight: bold;\\n}\\n\\n#map {\\n  width: 100%;\\n  height: 70vh;\\n}\\n\\n.map-wrapper {\\n  position: relative;\\n}\\n\\n.map-wrapper #map_center {\\n  position: absolute;\\n  z-index: 99;\\n  height: 40px;\\n  width: 40px;\\n  top: 50%;\\n  left: 50%;\\n  margin-left: -21px;\\n  margin-top: -41px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9jdG9yL2RvY3Rvci1zaWdudXAvZG9jdG9yLXNpZ251cC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx1REFBQTtBQUNKOztBQUVFO0VBQ0MseUJBQUE7QUFDSDs7QUFDRTtFQUNFLHlCQUFBO0FBRUo7O0FBQUU7RUFDRSw4RUFBQTtBQUdKOztBQURFO0VBQ0UseUJBQUE7QUFJSjs7QUFGRTtFQUNFLDhFQUFBO0FBS0o7O0FBSEU7RUFDSSxrQkFBQTtBQU1OOztBQUpJO0VBQ0UsWUFBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0FBT047O0FBSkk7RUFDRSxZQUFBO0VBQ0EsYUFBQTtBQU9OOztBQUxJO0VBQ0Usa0JBQUE7QUFRTjs7QUFOSTtFQUNFLFlBQUE7RUFDQSxhQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0FBU047O0FBUEk7RUFDRSxjQUFBO0VBQ0EsdUJBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtBQVVOOztBQVJJO0VBQ0UsVUFBQTtFQUNBLFdBQUE7RUFDQSxxQkFBQTtBQVdOOztBQVBJO0VBQ0UsYUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQVVOOztBQVBJO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUFVTjs7QUFQSTtFQUNFLGtCQUFBO0FBVU47O0FBUk07RUFDRSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtBQVVSIiwiZmlsZSI6InNyYy9hcHAvZG9jdG9yL2RvY3Rvci1zaWdudXAvZG9jdG9yLXNpZ251cC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudHtcclxuICAgIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzkzRjlCOSwgIzFEOTc2Qyk7XHJcbiAgXHJcbiAgfVxyXG4gIGlvbi10b29sYmFye1xyXG4gICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuICBpb24tY2FyZC10aXRsZSB7XHJcbiAgICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuICBpb24tY2FyZHtcclxuICAgIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMTM0RTVFIDAlLCAjNzFCMjgwIDUxJSwgIzEzNEU1RSAxMDAlKTtcclxuICB9XHJcbiAgaW9uLWl0ZW17XHJcbiAgICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuICBpb24tYnV0dG9ue1xyXG4gICAgLS1iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMxMzRFNUUgMCUsICM3MUIyODAgNTElLCAjMTM0RTVFIDEwMCUpO1xyXG4gIH1cclxuICAudGl0bGV7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgICNpbWFnZXtcclxuICAgICAgd2lkdGg6IDE1MHB4O1xyXG4gICAgICBoZWlnaHQ6IDE1MHB4O1xyXG4gICAgICBtYXJnaW46IGF1dG87XHJcbiAgXHJcbiAgICB9XHJcbiAgICAjaW1hZ2VCdXR0b257XHJcbiAgICAgIHdpZHRoOiAxODBweDtcclxuICAgICAgaGVpZ2h0OiAxNTVweDtcclxuICAgIH1cclxuICAgICNpbWFnZUNvbHtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgLmZpbGVJbnB1dCB7XHJcbiAgICAgIHdpZHRoOiAwLjFweDtcclxuICAgICAgaGVpZ2h0OiAwLjFweDtcclxuICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB6LWluZGV4OiAtMTtcclxuICAgIH1cclxuICAgIC5maWxlSW5wdXQgICBsYWJlbCB7XHJcbiAgICAgIGNvbG9yOiAjNzE3MTcxO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcbiAgICAjbWFwX2NhbnZhcyB7XHJcbiAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgIGhlaWdodDogODAlO1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgI2FkZHJlc3Mge1xyXG4gICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAjbWFwIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogNzB2aDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLm1hcC13cmFwcGVyIHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgXHJcbiAgICAgICNtYXBfY2VudGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgei1pbmRleDogOTk7XHJcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICBtYXJnaW4tbGVmdDogLTIxcHg7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLTQxcHg7XHJcbiAgICAgIH1cclxuICAgIH0iXX0= */\";","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NativeGeocoder, NativeGeocoderOptions, NativeGeocoderResult } from '@ionic-native/native-geocoder/ngx';\nimport { MenuController, ToastController, Platform, AlertController, ModalController } from '@ionic/angular';\nimport { DoctorService } from 'src/app/sdk/custom/doctor.service';\nimport { PatientServiceService } from 'src/app/sdk/custom/patient-service.service';\nimport { CheckupTimingComponent } from './checkup-timing/checkup-timing.component';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { PlaceLocation } from './location.model';\n\nfunction base64toBlob(base64Data, contentType) {\n  contentType = contentType || '';\n  const sliceSize = 1024;\n  const byteCharacters = window.atob(base64Data);\n  const bytesLength = byteCharacters.length;\n  const slicesCount = Math.ceil(bytesLength / sliceSize);\n  const byteArrays = new Array(slicesCount);\n\n  for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    const begin = sliceIndex * sliceSize;\n    const end = Math.min(begin + sliceSize, bytesLength);\n\n    const bytes = new Array(end - begin);\n    for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n  return new Blob(byteArrays, { type: contentType });\n}\n@Component({\n  selector: 'app-doctor-signup',\n  templateUrl: './doctor-signup.page.html',\n  styleUrls: ['./doctor-signup.page.scss'],\n})\nexport class DoctorSignupPage implements OnInit {\n\n  Form: FormGroup;\n  loading = false;\n  img1: any;\n  email;\n  vissible = false;\n  code;\n  verifyLoading = false;\n  emailVerified = false;\n  disableEmailColumn = true;\n  timingValueFrom;\n  timingValueEnd;\n  specialities: string[] = ['Apple', 'Orange', 'Banana'];\n  @ViewChild('map', { static: false }) mapElement: ElementRef;\n  map: any;\n  address: string;\n\n  latitude: number;\n  longitude: number;\n  constructor(private geolocation: Geolocation,\n    private nativeGeocoder: NativeGeocoder, private modalController: ModalController, public datepipe: DatePipe, private patientService: PatientServiceService, private doctorService: DoctorService, private menu: MenuController, public toastController: ToastController, private router: Router, private formBuilder: FormBuilder, private platform: Platform, public alertController: AlertController) { }\n\n  ngOnInit() {\n    this.Form = this.formBuilder.group({\n      username: [null, [Validators.required, Validators.pattern('^[a-zA-Z ]*$')]],\n      cnic: [null, [Validators.required, Validators.maxLength(15), Validators.minLength(13)]],\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required]],\n      phone: [null, [Validators.required, Validators.minLength(12)]],\n      image: new FormControl(null),\n      imageUrl: [],\n      timing: [],\n      specialities: [[]],\n      Location: [null, [Validators.required]],\n      city: [null, [Validators.required]],\n\n      //confirmPassword: [null, [Validators.required]],\n    });\n  }\n  onLocationPicked(location: PlaceLocation) {\n    console.log('location = ',location);\n    let n = `${location.address}`.split(\",\");\n    const loc = `${location.address}`.split(\",\")[n.length - 2];\n    //const loc = location.address.slice(location.address.lastIndexOf(',') + 2);\n    console.log('loc = ',loc);\n    this.Form.patchValue({ Location: location.address });\n    this.Form.patchValue({ city: loc });\n  }\n  onImagePicked(imageData: string | File) {\n    //console.log('imageData = ',imageData);\n    let imageFile;\n    if (typeof imageData === 'string') {\n      try {\n        imageFile = base64toBlob(\n          imageData.replace('data:image/jpeg;base64,', ''),\n          'image/jpeg'\n        );\n      } catch (error) {\n        console.log(error);\n        return;\n      }\n    } else {\n      imageFile = imageData;\n    }\n    console.log('image path = ', imageFile);\n    this.Form.patchValue({ image: imageFile });\n\n  }\n  async signUpButton() {\n    this.Form.controls['imageUrl'].setValue(this.patientService.imageURL);\n    this.Form.patchValue({ timing: this.doctorService.doctorTiming })\n    // this.Form.controls['imageUrl'].setValue(this.patientService.imageURL);\n    console.log('form value = ', this.Form.value);\n    this.doctorService.doctorRegister(this.Form.value).subscribe(\n      async data => {\n\n        console.log('got response from server', data);\n\n        const toast = await this.toastController.create({\n          message: data.message,\n          // message: `${name} has been saved successfully.`,\n          duration: 3500\n        });\n        toast.present();\n        if (data.message === 'Signup successful') {\n          this.router.navigateByUrl('/home');\n        }\n\n        this.loading = false;\n        // this.router.navigateByUrl('/home');\n      },\n      async error => {\n        this.loading = false;\n        const alert = await this.alertController.create({\n          header: 'Alert',\n          //subHeader: 'Subtitle',\n          message: error.error.message,\n          buttons: ['OK']\n        });\n        alert.present();\n      }\n    );\n  }\n  sendEmail() {\n    this.patientService.sendMail({ email: this.Form.controls['email'].value }).subscribe(\n      async data => {\n        this.verifyLoading = false;\n        console.log('got response from server', data);\n\n        const toast = await this.toastController.create({\n          message: data.message,\n          // message: `${name} has been saved successfully.`,\n          duration: 3500\n        });\n\n        this.code = data.code;\n        toast.present();\n        if (data.message === 'Email sent successfuly') {\n          this.vissible = true;\n          this.disableEmailColumn = false;\n        }\n\n        this.loading = false;\n        // this.router.navigateByUrl('/home');\n      },\n      async error => {\n        this.loading = false;\n        const toast = await this.toastController.create({\n          message: error.error.message,\n          // message: `${name} has been saved successfully.`,\n          duration: 3500\n        });\n      });\n  }\n  async CheckupTIming() {\n    const modal = await this.modalController.create({\n      component: CheckupTimingComponent\n    });\n    return await modal.present();\n  }\n\n  async optionsFn() {\n  }\n  // loadMap() {\n  //   this.geolocation.getCurrentPosition().then((resp) => {\n\n  //     this.latitude = resp.coords.latitude;\n  //     this.longitude = resp.coords.longitude;\n\n  //     let latLng = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\n  //     let mapOptions = {\n  //       center: latLng,\n  //       zoom: 15,\n  //       mapTypeId: google.maps.MapTypeId.ROADMAP\n  //     }\n\n  //     this.getAddressFromCoords(resp.coords.latitude, resp.coords.longitude);\n\n  //     this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n\n  //     this.map.addListener('dragend', () => {\n\n  //       this.latitude = this.map.center.lat();\n  //       this.longitude = this.map.center.lng();\n\n  //       this.getAddressFromCoords(this.map.center.lat(), this.map.center.lng())\n  //     });\n\n  //   }).catch((error) => {\n  //     console.log('Error getting location', error);\n  //   });\n  // }\n\n  // getAddressFromCoords(lattitude, longitude) {\n  //   console.log(\"getAddressFromCoords \" + lattitude + \" \" + longitude);\n  //   let options: NativeGeocoderOptions = {\n  //     useLocale: true,\n  //     maxResults: 5\n  //   };\n\n  //   this.nativeGeocoder.reverseGeocode(lattitude, longitude, options)\n  //     .then((result: NativeGeocoderResult[]) => {\n  //       this.address = \"\";\n  //       let responseAddress = [];\n  //       for (let [key, value] of Object.entries(result[0])) {\n  //         if (value.length > 0)\n  //           responseAddress.push(value);\n\n  //       }\n  //       responseAddress.reverse();\n  //       for (let value of responseAddress) {\n  //         this.address += value + \", \";\n  //       }\n  //       this.address = this.address.slice(0, -2);\n  //     })\n  //     .catch((error: any) => {\n  //       this.address = \"Address Not Available!\";\n  //     });\n\n  // }\n\n}\n\n\n"]}